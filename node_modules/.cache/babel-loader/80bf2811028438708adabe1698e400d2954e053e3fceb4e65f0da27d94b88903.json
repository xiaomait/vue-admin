{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport { getUserInfoAPI } from \"@/api\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  plugins: [createPersistedState()],\n  state: {\n    token: \"\",\n    // 用户token\n    userInfo: {} // 定义用户信息对象\n  },\n\n  getters: {\n    // username(state) {\n    //   return state.userInfo.username;\n    // },\n    username: state => state.userInfo.username,\n    nickname: state => state.userInfo.nickname,\n    user_pic: state => state.userInfo.user_pic\n  },\n  mutations: {\n    // 2. 更新 token 的 mutation 函数\n    updateToken(state, newToken) {\n      state.token = newToken;\n    },\n    // 更新用户的信息\n    updateUserInfo(state, info) {\n      state.userInfo = info;\n    }\n  },\n  actions: {\n    // 定义初始化用户基本信息的 action 函数\n    async initUserInfo(store) {\n      const res = await getUserInfoAPI();\n      if (res.data.code === 0) {\n        store.commit(\"updateUserInfo\", res.data.data);\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","createPersistedState","getUserInfoAPI","use","Store","plugins","state","token","userInfo","getters","username","nickname","user_pic","mutations","updateToken","newToken","updateUserInfo","info","actions","initUserInfo","store","res","data","code","commit","modules"],"sources":["/Users/xiaoma/Desktop/Vue/vue-admin/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport { getUserInfoAPI } from \"@/api\";\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  plugins: [createPersistedState()],\n  state: {\n    token: \"\", // 用户token\n    userInfo: {}, // 定义用户信息对象\n  },\n  getters: {\n    // username(state) {\n    //   return state.userInfo.username;\n    // },\n    username: (state) => state.userInfo.username,\n    nickname: (state) => state.userInfo.nickname,\n    user_pic: (state) => state.userInfo.user_pic,\n  },\n  mutations: {\n    // 2. 更新 token 的 mutation 函数\n    updateToken(state, newToken) {\n      state.token = newToken;\n    },\n    // 更新用户的信息\n    updateUserInfo(state, info) {\n      state.userInfo = info;\n    },\n  },\n  actions: {\n    // 定义初始化用户基本信息的 action 函数\n    async initUserInfo(store) {\n      const res = await getUserInfoAPI();\n      if (res.data.code === 0) {\n        store.commit(\"updateUserInfo\", res.data.data);\n      }\n    },\n  },\n  modules: {},\n});\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,oBAAoB,MAAM,qBAAqB;AACtD,SAASC,cAAc,QAAQ,OAAO;AACtCH,GAAG,CAACI,GAAG,CAACH,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACI,KAAK,CAAC;EAC5BC,OAAO,EAAE,CAACJ,oBAAoB,EAAE,CAAC;EACjCK,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IAAE;IACXC,QAAQ,EAAE,CAAC,CAAC,CAAE;EAChB,CAAC;;EACDC,OAAO,EAAE;IACP;IACA;IACA;IACAC,QAAQ,EAAGJ,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAACE,QAAQ;IAC5CC,QAAQ,EAAGL,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAACG,QAAQ;IAC5CC,QAAQ,EAAGN,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAACI;EACtC,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,WAAW,CAACR,KAAK,EAAES,QAAQ,EAAE;MAC3BT,KAAK,CAACC,KAAK,GAAGQ,QAAQ;IACxB,CAAC;IACD;IACAC,cAAc,CAACV,KAAK,EAAEW,IAAI,EAAE;MAC1BX,KAAK,CAACE,QAAQ,GAAGS,IAAI;IACvB;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,YAAY,CAACC,KAAK,EAAE;MACxB,MAAMC,GAAG,GAAG,MAAMnB,cAAc,EAAE;MAClC,IAAImB,GAAG,CAACC,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;QACvBH,KAAK,CAACI,MAAM,CAAC,gBAAgB,EAAEH,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;MAC/C;IACF;EACF,CAAC;EACDG,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}