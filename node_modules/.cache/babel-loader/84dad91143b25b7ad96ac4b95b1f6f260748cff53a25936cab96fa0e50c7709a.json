{"ast":null,"code":"import { getArtCateListAPI, addArtCateAPI, updateArtCateAPI, delArtCateAPI } from \"@/api\";\nexport default {\n  name: \"ArtCate\",\n  data() {\n    return {\n      cateList: [],\n      // 文章的分类列表\n      addVisible: false,\n      // 添加分类-对话框是否显示\n      addForm: {\n        cate_name: \"\",\n        cate_alias: \"\"\n      },\n      // 添加表单的数据对象\n      addRules: {\n        cate_name: [{\n          required: true,\n          message: \"请输入分类名称\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^\\S{1,10}$/,\n          message: \"分类名必须是1-10位的非空字符\",\n          trigger: \"blur\"\n        }],\n        cate_alias: [{\n          required: true,\n          message: \"请输入分类别名\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^[a-zA-Z0-9]{1,15}$/,\n          message: \"分类别名必须是1-15位的字母数字\",\n          trigger: \"blur\"\n        }]\n      },\n      // 添加表单的验证规则对象\n      editId: \"\",\n      // 要修改的文章id\n      isEdit: false // 保存编辑状态(false新增, true编辑)\n    };\n  },\n\n  created() {\n    this.initCateListFn();\n  },\n  methods: {\n    async initCateListFn() {\n      const {\n        data: res\n      } = await getArtCateListAPI();\n      // console.log(res);\n      this.cateList = res.data;\n    },\n    // 对话框内-添加按钮-点击事件\n    async addFn() {\n      // 表单预校验\n      this.$refs.addRef.validate(async valid => {\n        if (valid) {\n          // 判断当前是新增还是编辑\n          if (this.isEdit) {\n            // 编辑状态\n            // 调用接口传递数据给后台\n            const {\n              data: res\n            } = await updateArtCateAPI({\n              id: this.editId,\n              ...this.addForm\n            });\n            if (res.code !== 0) return this.$message.error(\"更新分类失败！\");\n            this.$message.success(\"更新分类成功！\");\n          } else {\n            // 新增\n            // 调用接口传递数据给后台\n            const {\n              data: res\n            } = await addArtCateAPI(this.addForm);\n            if (res.code !== 0) return this.$message.error(\"添加分类失败！\");\n            this.$message.success(\"添加分类成功！\");\n          }\n\n          // 重新请求列表数据\n          this.initCateListFn();\n          // 关闭对话框\n          this.addVisible = false;\n        } else {\n          return false;\n        }\n      });\n    },\n    // 对话框内-取消按钮-点击事件\n    cancelFn() {\n      this.addVisible = false;\n    },\n    onAddClosedFn() {\n      this.$refs.addRef.resetFields();\n    },\n    // 修改-按钮点击事件\n    updateFn(obj) {\n      this.editId = obj.id; // 保存要编辑的文章分类ID\n      this.isEdit = true; // 设置编辑状态\n      this.addVisible = true; // 让对话框显示\n      // 设置数据回显\n      this.$nextTick(() => {\n        // 先让对话框出现, 它绑定空值的对象, 才能resetFields清空用初始空值\n        this.addForm.cate_name = obj.cate_name;\n        this.addForm.cate_alias = obj.cate_alias;\n      });\n    },\n    // 添加分类->点击出对话框\n    addCateBtnFn() {\n      this.addVisible = true; // 让对话框出现\n      this.editId = \"\"; // 编辑的文章分类id设置无\n      this.isEdit = false; // 编辑的状态关闭\n    },\n\n    // 删除-文章分类\n    async removeFn(id) {\n      const {\n        data: res\n      } = await delArtCateAPI(id);\n      if (res.code !== 0) return this.$message.error(\"删除分类失败！\");\n      this.$message.success(\"删除分类成功！\");\n      // 重新请求列表数据\n      this.initCateListFn();\n    }\n  }\n};","map":{"version":3,"mappings":"AAsEA,SACAA,mBACAC,eACAC,kBACAC,qBACA;AACA;EACAC;EACAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;QACAC;QACAC;MACA;MAAA;MACAC;QACAF,YACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA,EACA;QACAJ,aACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA;MAEA;MAAA;MACAE;MAAA;MACAC;IACA;EACA;;EACAC;IACA;EACA;EACAC;IACA;MACA;QAAAd;MAAA;MACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;UACA;UACA;YACA;YACA;YACA;cAAAA;YAAA;cACAe;cACA;YACA;YACA;YACA;UACA;YACA;YACA;YACA;cAAAf;YAAA;YACA;YACA;UACA;;UAEA;UACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACA;IACAgB;MACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;QACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;;IACA;IACA;MACA;QAAAnB;MAAA;MACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["getArtCateListAPI","addArtCateAPI","updateArtCateAPI","delArtCateAPI","name","data","cateList","addVisible","addForm","cate_name","cate_alias","addRules","required","message","trigger","pattern","editId","isEdit","created","methods","id","cancelFn","onAddClosedFn","updateFn","addCateBtnFn"],"sourceRoot":"src/views/Article","sources":["artCate.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 预览文章分类 -->\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix header-box\">\n        <span>文章分类</span>\n        <el-button type=\"primary\" size=\"mini\" @click=\"addCateBtnFn\"\n          >添加分类</el-button\n        >\n      </div>\n      <!-- 分类数据表格 -->\n      <el-table style=\"width: 100%\" :data=\"cateList\" border stripe>\n        <el-table-column\n          label=\"序号\"\n          type=\"index\"\n          width=\"100\"\n        ></el-table-column>\n        <el-table-column label=\"分类名称\" prop=\"cate_name\"></el-table-column>\n        <el-table-column label=\"分类别名\" prop=\"cate_alias\"></el-table-column>\n        <el-table-column label=\"操作\">\n          <template v-slot=\"scope\">\n            <el-button type=\"primary\" size=\"mini\" @click=\"updateFn(scope.row)\"\n              >修改</el-button\n            >\n            <el-button type=\"danger\" size=\"mini\" @click=\"removeFn(scope.row.id)\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 添加分类的对话框 -->\n    <el-dialog\n      :title=\"isEdit ? '编辑文章分类' : '添加文章分类'\"\n      :visible.sync=\"addVisible\"\n      width=\"35%\"\n      @closed=\"onAddClosedFn\"\n    >\n      <!-- 添加的表单 -->\n      <el-form\n        :model=\"addForm\"\n        :rules=\"addRules\"\n        ref=\"addRef\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"分类名称\" prop=\"cate_name\">\n          <el-input\n            v-model=\"addForm.cate_name\"\n            minlength=\"1\"\n            maxlength=\"10\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"分类别名\" prop=\"cate_alias\">\n          <el-input\n            v-model=\"addForm.cate_alias\"\n            minlength=\"1\"\n            maxlength=\"15\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelFn\">取 消</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"addFn\">添 加</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  getArtCateListAPI,\n  addArtCateAPI,\n  updateArtCateAPI,\n  delArtCateAPI,\n} from \"@/api\";\nexport default {\n  name: \"ArtCate\",\n  data() {\n    return {\n      cateList: [], // 文章的分类列表\n      addVisible: false, // 添加分类-对话框是否显示\n      addForm: {\n        cate_name: \"\",\n        cate_alias: \"\",\n      }, // 添加表单的数据对象\n      addRules: {\n        cate_name: [\n          { required: true, message: \"请输入分类名称\", trigger: \"blur\" },\n          {\n            pattern: /^\\S{1,10}$/,\n            message: \"分类名必须是1-10位的非空字符\",\n            trigger: \"blur\",\n          },\n        ],\n        cate_alias: [\n          { required: true, message: \"请输入分类别名\", trigger: \"blur\" },\n          {\n            pattern: /^[a-zA-Z0-9]{1,15}$/,\n            message: \"分类别名必须是1-15位的字母数字\",\n            trigger: \"blur\",\n          },\n        ],\n      }, // 添加表单的验证规则对象\n      editId: \"\", // 要修改的文章id\n      isEdit: false, // 保存编辑状态(false新增, true编辑)\n    };\n  },\n  created() {\n    this.initCateListFn();\n  },\n  methods: {\n    async initCateListFn() {\n      const { data: res } = await getArtCateListAPI();\n      // console.log(res);\n      this.cateList = res.data;\n    },\n    // 对话框内-添加按钮-点击事件\n    async addFn() {\n      // 表单预校验\n      this.$refs.addRef.validate(async (valid) => {\n        if (valid) {\n          // 判断当前是新增还是编辑\n          if (this.isEdit) {\n            // 编辑状态\n            // 调用接口传递数据给后台\n            const { data: res } = await updateArtCateAPI({\n              id: this.editId,\n              ...this.addForm,\n            });\n            if (res.code !== 0) return this.$message.error(\"更新分类失败！\");\n            this.$message.success(\"更新分类成功！\");\n          } else {\n            // 新增\n            // 调用接口传递数据给后台\n            const { data: res } = await addArtCateAPI(this.addForm);\n            if (res.code !== 0) return this.$message.error(\"添加分类失败！\");\n            this.$message.success(\"添加分类成功！\");\n          }\n\n          // 重新请求列表数据\n          this.initCateListFn();\n          // 关闭对话框\n          this.addVisible = false;\n        } else {\n          return false;\n        }\n      });\n    },\n    // 对话框内-取消按钮-点击事件\n    cancelFn() {\n      this.addVisible = false;\n    },\n    onAddClosedFn() {\n      this.$refs.addRef.resetFields();\n    },\n    // 修改-按钮点击事件\n    updateFn(obj) {\n      this.editId = obj.id; // 保存要编辑的文章分类ID\n      this.isEdit = true; // 设置编辑状态\n      this.addVisible = true; // 让对话框显示\n      // 设置数据回显\n      this.$nextTick(() => {\n        // 先让对话框出现, 它绑定空值的对象, 才能resetFields清空用初始空值\n        this.addForm.cate_name = obj.cate_name;\n        this.addForm.cate_alias = obj.cate_alias;\n      });\n    },\n    // 添加分类->点击出对话框\n    addCateBtnFn() {\n      this.addVisible = true; // 让对话框出现\n      this.editId = \"\"; // 编辑的文章分类id设置无\n      this.isEdit = false; // 编辑的状态关闭\n    },\n    // 删除-文章分类\n    async removeFn(id) {\n      const { data: res } = await delArtCateAPI(id);\n      if (res.code !== 0) return this.$message.error(\"删除分类失败！\");\n      this.$message.success(\"删除分类成功！\");\n      // 重新请求列表数据\n      this.initCateListFn();\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.header-box {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}