{"ast":null,"code":"import { updatePwdAPI } from \"@/api\";\nexport default {\n  name: \"UserPwd\",\n  data() {\n    // 检测新旧密码是否相同\n    const samePwd = (rule, value, callback) => {\n      if (value === this.pwdForm.old_pwd) {\n        return callback(new Error(\"新旧密码不能相同！\"));\n      }\n      callback();\n    };\n    // 检测两次新密码是否一致\n    const rePwd = (rule, value, callback) => {\n      if (value !== this.pwdForm.new_pwd) {\n        return callback(new Error(\"两次新密码不一致！\"));\n      }\n      callback();\n    };\n    return {\n      // 表单的数据对象\n      pwdForm: {\n        old_pwd: \"\",\n        new_pwd: \"\",\n        re_pwd: \"\"\n      },\n      // 表单的验证规则对象\n      pwdFormRules: {\n        old_pwd: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: \"密码长度必须是6-15位的非空字符串\",\n          trigger: \"blur\"\n        }],\n        new_pwd: [{\n          required: true,\n          message: \"请输入新密码\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: \"密码长度必须是6-15位的非空字符串\",\n          trigger: \"blur\"\n        }, {\n          validator: samePwd,\n          trigger: \"blur\"\n        }],\n        re_pwd: [{\n          required: true,\n          message: \"请再次确认新密码\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: \"密码长度必须是6-15位的非空字符串\",\n          trigger: \"blur\"\n        }, {\n          validator: rePwd,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    // 修改密码->点击确认\n    updatePwdFn() {\n      this.$refs.pwdFormRef.validate(async valid => {\n        if (!valid) return false; // 未通过校验拦住\n\n        const {\n          data: res\n        } = await updatePwdAPI(this.pwdForm);\n        if (res.code !== 0) return this.$message.error(\"更新密码失败！\");\n        this.$message.success(\"更新密码成功！\");\n        this.$refs.pwdFormRef.resetFields();\n      });\n    },\n    // 重置按钮->点击事件\n    resetFn() {\n      this.$refs.pwdFormRef.resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":"AA8BA;AACA;EACAA;EACAC;IACA;IACA;MACA;QACA;MACA;MACAC;IACA;IACA;IACA;MACA;QACA;MACA;MACAA;IACA;IACA;MACA;MACAC;QACAC;QACAC;QACAC;MACA;MACA;MACAC;QACAH,UACA;UAAAI;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA,EACA;QACAL,UACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA,GACA;UACAE;UACAF;QACA,EACA;QACAJ,SACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA,GACA;UACAE;UACAF;QACA;MAEA;IACA;EACA;EACAG;IACA;IACAC;MACA;QACA;;QAEA;UAAAb;QAAA;QACA;QAEA;QACA;MACA;IACA;IACA;IACAc;MACA;IACA;EACA;AACA","names":["name","data","callback","pwdForm","old_pwd","new_pwd","re_pwd","pwdFormRules","required","message","trigger","pattern","validator","methods","updatePwdFn","resetFn"],"sourceRoot":"src/views/User","sources":["userPwd.vue"],"sourcesContent":["<template>\n  <el-card class=\"box-card\">\n    <div slot=\"header\" class=\"clearfix\">\n      <span>重置密码</span>\n    </div>\n    <!-- 表单 -->\n    <el-form\n      :model=\"pwdForm\"\n      :rules=\"pwdFormRules\"\n      ref=\"pwdFormRef\"\n      label-width=\"100px\"\n    >\n      <el-form-item label=\"原密码\" prop=\"old_pwd\">\n        <el-input v-model=\"pwdForm.old_pwd\" type=\"password\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"新密码\" prop=\"new_pwd\">\n        <el-input v-model=\"pwdForm.new_pwd\" type=\"password\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"确认新密码\" prop=\"re_pwd\">\n        <el-input v-model=\"pwdForm.re_pwd\" type=\"password\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"updatePwdFn\">修改密码</el-button>\n        <el-button @click=\"resetFn\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>\n\n<script>\nimport { updatePwdAPI } from \"@/api\";\nexport default {\n  name: \"UserPwd\",\n  data() {\n    // 检测新旧密码是否相同\n    const samePwd = (rule, value, callback) => {\n      if (value === this.pwdForm.old_pwd) {\n        return callback(new Error(\"新旧密码不能相同！\"));\n      }\n      callback();\n    };\n    // 检测两次新密码是否一致\n    const rePwd = (rule, value, callback) => {\n      if (value !== this.pwdForm.new_pwd) {\n        return callback(new Error(\"两次新密码不一致！\"));\n      }\n      callback();\n    };\n    return {\n      // 表单的数据对象\n      pwdForm: {\n        old_pwd: \"\",\n        new_pwd: \"\",\n        re_pwd: \"\",\n      },\n      // 表单的验证规则对象\n      pwdFormRules: {\n        old_pwd: [\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          {\n            pattern: /^\\S{6,15}$/,\n            message: \"密码长度必须是6-15位的非空字符串\",\n            trigger: \"blur\",\n          },\n        ],\n        new_pwd: [\n          { required: true, message: \"请输入新密码\", trigger: \"blur\" },\n          {\n            pattern: /^\\S{6,15}$/,\n            message: \"密码长度必须是6-15位的非空字符串\",\n            trigger: \"blur\",\n          },\n          {\n            validator: samePwd,\n            trigger: \"blur\",\n          },\n        ],\n        re_pwd: [\n          { required: true, message: \"请再次确认新密码\", trigger: \"blur\" },\n          {\n            pattern: /^\\S{6,15}$/,\n            message: \"密码长度必须是6-15位的非空字符串\",\n            trigger: \"blur\",\n          },\n          {\n            validator: rePwd,\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  methods: {\n    // 修改密码->点击确认\n    updatePwdFn() {\n      this.$refs.pwdFormRef.validate(async (valid) => {\n        if (!valid) return false; // 未通过校验拦住\n\n        const { data: res } = await updatePwdAPI(this.pwdForm);\n        if (res.code !== 0) return this.$message.error(\"更新密码失败！\");\n\n        this.$message.success(\"更新密码成功！\");\n        this.$refs.pwdFormRef.resetFields();\n      });\n    },\n    // 重置按钮->点击事件\n    resetFn() {\n      this.$refs.pwdFormRef.resetFields();\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-form {\n  width: 500px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}