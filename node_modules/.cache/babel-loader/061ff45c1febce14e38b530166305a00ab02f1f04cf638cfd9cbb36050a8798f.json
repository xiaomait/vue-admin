{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Home\",\n  mounted() {\n    this.setCurveChartFn();\n  },\n  methods: {\n    // 设置面积图\n    setCurveChartFn() {\n      // 基于准备好的dom，初始化echarts实例\n      const curveChart = echarts.init(document.getElementById(\"curve_show\"));\n      // 绘制面积图表\n      // 数据源(模拟后台返回的数据)\n      const aListAll = [{\n        count: 36,\n        date: \"2019-04-13\"\n      }, {\n        count: 52,\n        date: \"2019-04-14\"\n      }, {\n        count: 78,\n        date: \"2019-04-15\"\n      }, {\n        count: 85,\n        date: \"2019-04-16\"\n      }, {\n        count: 65,\n        date: \"2019-04-17\"\n      }, {\n        count: 72,\n        date: \"2019-04-18\"\n      }, {\n        count: 88,\n        date: \"2019-04-19\"\n      }, {\n        count: 64,\n        date: \"2019-04-20\"\n      }, {\n        count: 72,\n        date: \"2019-04-21\"\n      }, {\n        count: 90,\n        date: \"2019-04-22\"\n      }, {\n        count: 96,\n        date: \"2019-04-23\"\n      }, {\n        count: 100,\n        date: \"2019-04-24\"\n      }, {\n        count: 102,\n        date: \"2019-04-25\"\n      }, {\n        count: 110,\n        date: \"2019-04-26\"\n      }, {\n        count: 123,\n        date: \"2019-04-27\"\n      }, {\n        count: 100,\n        date: \"2019-04-28\"\n      }, {\n        count: 132,\n        date: \"2019-04-29\"\n      }, {\n        count: 146,\n        date: \"2019-04-30\"\n      }, {\n        count: 200,\n        date: \"2019-05-01\"\n      }, {\n        count: 180,\n        date: \"2019-05-02\"\n      }, {\n        count: 163,\n        date: \"2019-05-03\"\n      }, {\n        count: 110,\n        date: \"2019-05-04\"\n      }, {\n        count: 80,\n        date: \"2019-05-05\"\n      }, {\n        count: 82,\n        date: \"2019-05-06\"\n      }, {\n        count: 70,\n        date: \"2019-05-07\"\n      }, {\n        count: 65,\n        date: \"2019-05-08\"\n      }, {\n        count: 54,\n        date: \"2019-05-09\"\n      }, {\n        count: 40,\n        date: \"2019-05-10\"\n      }, {\n        count: 45,\n        date: \"2019-05-11\"\n      }, {\n        count: 38,\n        date: \"2019-05-12\"\n      }];\n\n      // 但是图标要求直接给数字的值, 所以要把对象的值取出来形成2个只有值的数组\n      const aCount = [];\n      const aDate = [];\n      for (let i = 0; i < aListAll.length; i++) {\n        aCount.push(aListAll[i].count);\n        aDate.push(aListAll[i].date);\n      }\n\n      // 面积图的echarts配置项(参考文档复制)\n      const chartopt = {\n        title: {\n          text: \"月新增文章数\",\n          // 标题\n          left: \"center\",\n          // 位置居中\n          top: \"10\" // 标题距离容器顶部px\n        },\n\n        tooltip: {\n          // 提示框组件\n          trigger: \"axis\" // 坐标轴触发(鼠标放在坐标轴就能出提示框)\n        },\n\n        legend: {\n          // 图例组件(每种颜色的意思)\n          data: [\"新增文章\"],\n          // 图例文字解释(要和series里name对应)\n          top: \"40\" // 距离容器顶部px\n        },\n\n        toolbox: {\n          // 工具栏\n          show: true,\n          // 要显示\n          feature: {\n            // 各工具配置项\n            mark: {\n              show: true\n            },\n            // 辅助线开关\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            // 数据视图工具，可以展现当前图表所用的数据，编辑后可以动态更新。\n            magicType: {\n              show: true,\n              type: [\"line\", \"bar\"]\n            },\n            // 动态类型切换\n            restore: {\n              show: true\n            },\n            // 配置项还原\n            saveAsImage: {\n              show: true\n            } // 点击保存下载图片\n          }\n        },\n\n        xAxis: [\n        // 水平轴显示\n        {\n          name: \"日\",\n          type: \"category\",\n          boundaryGap: false,\n          // 坐标轴两边留白策略 (不留白)\n          data: aDate // 水平轴上的数字数据 (时间)\n        }],\n\n        yAxis: [\n        // 垂直轴显示\n        {\n          name: \"月新增文章数\",\n          type: \"value\" // 以series里的data值做划分段\n        }],\n\n        series: [\n        // 系列(控制图表类型和数据)\n        {\n          name: \"新增文章\",\n          type: \"line\",\n          // 折线图\n          smooth: true,\n          // 是否平滑视觉引导线，默认不平滑，可以设置成 true 平滑显示\n          areaStyle: {\n            type: \"default\"\n          },\n          // 区域填充样式。设置后显示成区域面积图。\n          itemStyle: {\n            color: \"#f80\",\n            lineStyle: {\n              color: \"#f80\"\n            }\n          },\n          // 折线拐点标志的样式。\n          data: aCount // 真正数据源(用下标和x轴数组对应)\n        }],\n\n        grid: {\n          // 直角坐标系内绘图网格\n          show: true,\n          x: 50,\n          // grid 组件离容器偏移量, 左侧\n          x2: 50,\n          // 右侧\n          y: 80,\n          // 上\n          height: 220 // 高度\n        }\n      };\n\n      curveChart.setOption(chartopt);\n    },\n    // 设置饼状图\n    picChartFn() {\n      const oPie = echarts.init(document.getElementById(\"pie_show\"));\n      const oPieopt = {\n        title: {\n          top: 10,\n          text: \"分类文章数量比\",\n          x: \"center\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          // 在图形上才会触发提示\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\" // 提示的文字显示的格式\n          // a: 系列名\n          // b: 数据名\n          // c: 数值\n          // d: 百分比 (只有饼状图生效)\n        },\n\n        color: [\"#5885e8\", \"#13cfd5\", \"#00ce68\", \"#ff9565\"],\n        // 系列颜色\n        legend: {\n          // 图例组件\n          x: \"center\",\n          top: 65,\n          data: [\"奇趣事\", \"会生活\", \"爱旅行\", \"趣美味\"] // 每个部分对应的数据名(要和series里name对应)\n        },\n\n        toolbox: {\n          // 工具箱\n          show: true,\n          x: \"center\",\n          top: 35,\n          feature: {\n            mark: {\n              show: true\n            },\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: [\"pie\", \"funnel\"],\n              option: {\n                funnel: {\n                  x: \"25%\",\n                  width: \"50%\",\n                  funnelAlign: \"left\",\n                  max: 1548\n                }\n              }\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        series: [{\n          name: \"访问来源\",\n          type: \"pie\",\n          radius: [\"45%\", \"60%\"],\n          center: [\"50%\", \"65%\"],\n          data: [{\n            value: 300,\n            name: \"奇趣事\"\n          }, {\n            value: 100,\n            name: \"会生活\"\n          }, {\n            value: 260,\n            name: \"爱旅行\"\n          }, {\n            value: 180,\n            name: \"趣美味\"\n          }]\n        }]\n      };\n      oPie.setOption(oPieopt);\n    },\n    // 设置底部柱状图\n    columnChartFn() {\n      const oColumn = echarts.init(document.getElementById(\"column_show\"));\n      const oColumnopt = {\n        title: {\n          text: \"文章访问量\",\n          left: \"center\",\n          top: \"10\"\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        legend: {\n          data: [\"奇趣事\", \"会生活\", \"爱旅行\", \"趣美味\"],\n          top: \"40\"\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {\n              show: true\n            },\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: [\"line\", \"bar\"]\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        xAxis: [{\n          type: \"category\",\n          data: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\"]\n        }],\n        yAxis: [{\n          name: \"访问量\",\n          type: \"value\"\n        }],\n        series: [{\n          name: \"奇趣事\",\n          type: \"bar\",\n          barWidth: 20,\n          areaStyle: {\n            type: \"default\"\n          },\n          itemStyle: {\n            color: \"#fd956a\"\n          },\n          data: [800, 708, 920, 1090, 1200]\n        }, {\n          name: \"会生活\",\n          type: \"bar\",\n          barWidth: 20,\n          areaStyle: {\n            type: \"default\"\n          },\n          itemStyle: {\n            color: \"#2bb6db\"\n          },\n          data: [400, 468, 520, 690, 800]\n        }, {\n          name: \"爱旅行\",\n          type: \"bar\",\n          barWidth: 20,\n          areaStyle: {\n            type: \"default\"\n          },\n          itemStyle: {\n            color: \"#13cfd5\"\n          },\n          data: [500, 668, 520, 790, 900]\n        }, {\n          name: \"趣美味\",\n          type: \"bar\",\n          barWidth: 20,\n          areaStyle: {\n            type: \"default\"\n          },\n          itemStyle: {\n            color: \"#00ce68\"\n          },\n          data: [600, 508, 720, 890, 1000]\n        }],\n        grid: {\n          show: true,\n          x: 50,\n          x2: 30,\n          y: 80,\n          height: 260\n        },\n        dataZoom: [\n        // 给x轴设置滚动条\n        {\n          start: 0,\n          // 默认为0\n          end: 100 - 1000 / 31,\n          // 默认为100\n          type: \"slider\",\n          show: true,\n          xAxisIndex: [0],\n          handleSize: 0,\n          // 滑动条的 左右2个滑动条的大小\n          height: 8,\n          // 组件高度\n          left: 45,\n          // 左边的距离\n          right: 50,\n          // 右边的距离\n          bottom: 26,\n          // 右边的距离\n          handleColor: \"#ddd\",\n          // h滑动图标的颜色\n          handleStyle: {\n            borderColor: \"#cacaca\",\n            borderWidth: \"1\",\n            shadowBlur: 2,\n            background: \"#ddd\",\n            shadowColor: \"#ddd\"\n          }\n        }]\n      };\n      oColumn.setOption(oColumnopt);\n    }\n  }\n};","map":{"version":3,"mappings":";AAiDA;AACA;EACAA;EACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;MACA;MACA;MACA,kBACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;;MAEA;MACA;MACA;MAEA;QACAC;QACAC;MACA;;MAEA;MACA;QACAC;UACAC;UAAA;UACAC;UAAA;UACAC;QACA;;QACAC;UACA;UACAC;QACA;;QACAC;UACA;UACAC;UAAA;UACAJ;QACA;;QACAK;UACA;UACAC;UAAA;UACAC;YACA;YACAC;cAAAF;YAAA;YAAA;YACAG;cAAAH;cAAAI;YAAA;YAAA;YACAC;cAAAL;cAAAM;YAAA;YAAA;YACAC;cAAAP;YAAA;YAAA;YACAQ;cAAAR;YAAA;UACA;QACA;;QACAS;QACA;QACA;UACA1B;UACAuB;UACAI;UAAA;UACAZ;QACA,EACA;;QACAa;QACA;QACA;UACA5B;UACAuB;QACA,EACA;;QACAM;QACA;QACA;UACA7B;UACAuB;UAAA;UACAO;UAAA;UACAC;YAAAR;UAAA;UAAA;UACAS;YAAAC;YAAAC;cAAAD;YAAA;UAAA;UAAA;UACAlB;QACA,EACA;;QACAoB;UACA;UACAlB;UACAmB;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;QACA;MACA;;MAEAC;IACA;IACA;IACAC;MACA;MACA;QACAjC;UACAG;UACAF;UACA2B;QACA;QACAxB;UACAC;UAAA;UACA6B;UACA;UACA;UACA;UACA;QACA;;QACAT;QAAA;QACAnB;UACA;UACAsB;UACAzB;UACAI;QACA;;QACAC;UACA;UACAC;UACAmB;UACAzB;UACAO;YACAC;cAAAF;YAAA;YACAG;cAAAH;cAAAI;YAAA;YACAC;cACAL;cACAM;cACAoB;gBACAC;kBACAR;kBACAS;kBACAC;kBACAC;gBACA;cACA;YACA;YACAvB;cAAAP;YAAA;YACAQ;cAAAR;YAAA;UACA;QACA;QACAY,SACA;UACA7B;UACAuB;UACAyB;UACAC;UACAlC,OACA;YAAAmC;YAAAlD;UAAA,GACA;YAAAkD;YAAAlD;UAAA,GACA;YAAAkD;YAAAlD;UAAA,GACA;YAAAkD;YAAAlD;UAAA;QAEA;MAEA;MACAmD;IACA;IACA;IACAC;MACA;MACA;QACA5C;UACAC;UACAC;UACAC;QACA;QACAC;UACAC;QACA;QACAC;UACAC;UACAJ;QACA;QACAK;UACAC;UACAC;YACAC;cAAAF;YAAA;YACAG;cAAAH;cAAAI;YAAA;YACAC;cAAAL;cAAAM;YAAA;YACAC;cAAAP;YAAA;YACAQ;cAAAR;YAAA;UACA;QACA;QACAS,QACA;UACAH;UACAR;QACA,EACA;QACAa,QACA;UACA5B;UACAuB;QACA,EACA;QACAM,SACA;UACA7B;UACAuB;UACA8B;UACAtB;YAAAR;UAAA;UACAS;YACAC;UACA;UACAlB;QACA,GACA;UACAf;UACAuB;UACA8B;UACAtB;YAAAR;UAAA;UACAS;YACAC;UACA;UACAlB;QACA,GACA;UACAf;UACAuB;UACA8B;UACAtB;YAAAR;UAAA;UACAS;YACAC;UACA;UACAlB;QACA,GACA;UACAf;UACAuB;UACA8B;UACAtB;YAAAR;UAAA;UACAS;YACAC;UACA;UACAlB;QACA,EACA;QACAoB;UACAlB;UACAmB;UACAC;UACAC;UACAC;QACA;QACAe;QACA;QACA;UACAC;UAAA;UACAC;UAAA;UACAjC;UACAN;UACAwC;UACAC;UAAA;UACAnB;UAAA;UACA7B;UAAA;UACAiD;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;YACAC;YACAC;YACAC;YACAC;YACAC;UACA;QACA;MAEA;MACAC;IACA;EACA;AACA","names":["name","mounted","methods","setCurveChartFn","count","date","aCount","aDate","title","text","left","top","tooltip","trigger","legend","data","toolbox","show","feature","mark","dataView","readOnly","magicType","type","restore","saveAsImage","xAxis","boundaryGap","yAxis","series","smooth","areaStyle","itemStyle","color","lineStyle","grid","x","x2","y","height","curveChart","picChartFn","formatter","option","funnel","width","funnelAlign","max","radius","center","value","oPie","columnChartFn","barWidth","dataZoom","start","end","xAxisIndex","handleSize","right","bottom","handleColor","handleStyle","borderColor","borderWidth","shadowBlur","background","shadowColor","oColumn"],"sourceRoot":"src/views/Home","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"container-fluid\">\n      <el-row class=\"spannel_list\" :gutter=\"10\">\n        <el-col :sm=\"6\" :xs=\"12\">\n          <div class=\"spannel\">\n            <em>10015</em><span>篇</span>\n            <b>总文章数</b>\n          </div>\n        </el-col>\n        <el-col :sm=\"6\" :xs=\"12\">\n          <div class=\"spannel scolor01\">\n            <em>123</em><span>篇</span>\n            <b>日新增文章数</b>\n          </div>\n        </el-col>\n        <el-col :sm=\"6\" :xs=\"12\">\n          <div class=\"spannel scolor02\">\n            <em>35</em><span>条</span>\n            <b>评论总数</b>\n          </div>\n        </el-col>\n        <el-col :sm=\"6\" :xs=\"12\">\n          <div class=\"spannel scolor03\">\n            <em>123</em><span>条</span>\n            <b>日新增评论数</b>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <div class=\"container-fluid\">\n      <el-row class=\"curve-pie\" :gutter=\"10\">\n        <el-col :sm=\"16\" :xs=\"16\">\n          <div class=\"gragh_pannel\" id=\"curve_show\"></div>\n        </el-col>\n        <el-col :sm=\"8\" :xs=\"8\">\n          <div class=\"gragh_pannel\" id=\"pie_show\"></div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <div class=\"container-fluid\">\n      <div class=\"column_pannel\" id=\"column_show\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Home\",\n  mounted() {\n    this.setCurveChartFn();\n  },\n  methods: {\n    // 设置面积图\n    setCurveChartFn() {\n      // 基于准备好的dom，初始化echarts实例\n      const curveChart = echarts.init(document.getElementById(\"curve_show\"));\n      // 绘制面积图表\n      // 数据源(模拟后台返回的数据)\n      const aListAll = [\n        { count: 36, date: \"2019-04-13\" },\n        { count: 52, date: \"2019-04-14\" },\n        { count: 78, date: \"2019-04-15\" },\n        { count: 85, date: \"2019-04-16\" },\n        { count: 65, date: \"2019-04-17\" },\n        { count: 72, date: \"2019-04-18\" },\n        { count: 88, date: \"2019-04-19\" },\n        { count: 64, date: \"2019-04-20\" },\n        { count: 72, date: \"2019-04-21\" },\n        { count: 90, date: \"2019-04-22\" },\n        { count: 96, date: \"2019-04-23\" },\n        { count: 100, date: \"2019-04-24\" },\n        { count: 102, date: \"2019-04-25\" },\n        { count: 110, date: \"2019-04-26\" },\n        { count: 123, date: \"2019-04-27\" },\n        { count: 100, date: \"2019-04-28\" },\n        { count: 132, date: \"2019-04-29\" },\n        { count: 146, date: \"2019-04-30\" },\n        { count: 200, date: \"2019-05-01\" },\n        { count: 180, date: \"2019-05-02\" },\n        { count: 163, date: \"2019-05-03\" },\n        { count: 110, date: \"2019-05-04\" },\n        { count: 80, date: \"2019-05-05\" },\n        { count: 82, date: \"2019-05-06\" },\n        { count: 70, date: \"2019-05-07\" },\n        { count: 65, date: \"2019-05-08\" },\n        { count: 54, date: \"2019-05-09\" },\n        { count: 40, date: \"2019-05-10\" },\n        { count: 45, date: \"2019-05-11\" },\n        { count: 38, date: \"2019-05-12\" },\n      ];\n\n      // 但是图标要求直接给数字的值, 所以要把对象的值取出来形成2个只有值的数组\n      const aCount = [];\n      const aDate = [];\n\n      for (let i = 0; i < aListAll.length; i++) {\n        aCount.push(aListAll[i].count);\n        aDate.push(aListAll[i].date);\n      }\n\n      // 面积图的echarts配置项(参考文档复制)\n      const chartopt = {\n        title: {\n          text: \"月新增文章数\", // 标题\n          left: \"center\", // 位置居中\n          top: \"10\", // 标题距离容器顶部px\n        },\n        tooltip: {\n          // 提示框组件\n          trigger: \"axis\", // 坐标轴触发(鼠标放在坐标轴就能出提示框)\n        },\n        legend: {\n          // 图例组件(每种颜色的意思)\n          data: [\"新增文章\"], // 图例文字解释(要和series里name对应)\n          top: \"40\", // 距离容器顶部px\n        },\n        toolbox: {\n          // 工具栏\n          show: true, // 要显示\n          feature: {\n            // 各工具配置项\n            mark: { show: true }, // 辅助线开关\n            dataView: { show: true, readOnly: false }, // 数据视图工具，可以展现当前图表所用的数据，编辑后可以动态更新。\n            magicType: { show: true, type: [\"line\", \"bar\"] }, // 动态类型切换\n            restore: { show: true }, // 配置项还原\n            saveAsImage: { show: true }, // 点击保存下载图片\n          },\n        },\n        xAxis: [\n          // 水平轴显示\n          {\n            name: \"日\",\n            type: \"category\",\n            boundaryGap: false, // 坐标轴两边留白策略 (不留白)\n            data: aDate, // 水平轴上的数字数据 (时间)\n          },\n        ],\n        yAxis: [\n          // 垂直轴显示\n          {\n            name: \"月新增文章数\",\n            type: \"value\", // 以series里的data值做划分段\n          },\n        ],\n        series: [\n          // 系列(控制图表类型和数据)\n          {\n            name: \"新增文章\",\n            type: \"line\", // 折线图\n            smooth: true, // 是否平滑视觉引导线，默认不平滑，可以设置成 true 平滑显示\n            areaStyle: { type: \"default\" }, // 区域填充样式。设置后显示成区域面积图。\n            itemStyle: { color: \"#f80\", lineStyle: { color: \"#f80\" } }, // 折线拐点标志的样式。\n            data: aCount, // 真正数据源(用下标和x轴数组对应)\n          },\n        ],\n        grid: {\n          // 直角坐标系内绘图网格\n          show: true,\n          x: 50, // grid 组件离容器偏移量, 左侧\n          x2: 50, // 右侧\n          y: 80, // 上\n          height: 220, // 高度\n        },\n      };\n\n      curveChart.setOption(chartopt);\n    },\n    // 设置饼状图\n    picChartFn() {\n      const oPie = echarts.init(document.getElementById(\"pie_show\"));\n      const oPieopt = {\n        title: {\n          top: 10,\n          text: \"分类文章数量比\",\n          x: \"center\",\n        },\n        tooltip: {\n          trigger: \"item\", // 在图形上才会触发提示\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\", // 提示的文字显示的格式\n          // a: 系列名\n          // b: 数据名\n          // c: 数值\n          // d: 百分比 (只有饼状图生效)\n        },\n        color: [\"#5885e8\", \"#13cfd5\", \"#00ce68\", \"#ff9565\"], // 系列颜色\n        legend: {\n          // 图例组件\n          x: \"center\",\n          top: 65,\n          data: [\"奇趣事\", \"会生活\", \"爱旅行\", \"趣美味\"], // 每个部分对应的数据名(要和series里name对应)\n        },\n        toolbox: {\n          // 工具箱\n          show: true,\n          x: \"center\",\n          top: 35,\n          feature: {\n            mark: { show: true },\n            dataView: { show: true, readOnly: false },\n            magicType: {\n              show: true,\n              type: [\"pie\", \"funnel\"],\n              option: {\n                funnel: {\n                  x: \"25%\",\n                  width: \"50%\",\n                  funnelAlign: \"left\",\n                  max: 1548,\n                },\n              },\n            },\n            restore: { show: true },\n            saveAsImage: { show: true },\n          },\n        },\n        series: [\n          {\n            name: \"访问来源\",\n            type: \"pie\",\n            radius: [\"45%\", \"60%\"],\n            center: [\"50%\", \"65%\"],\n            data: [\n              { value: 300, name: \"奇趣事\" },\n              { value: 100, name: \"会生活\" },\n              { value: 260, name: \"爱旅行\" },\n              { value: 180, name: \"趣美味\" },\n            ],\n          },\n        ],\n      };\n      oPie.setOption(oPieopt);\n    },\n    // 设置底部柱状图\n    columnChartFn() {\n      const oColumn = echarts.init(document.getElementById(\"column_show\"));\n      const oColumnopt = {\n        title: {\n          text: \"文章访问量\",\n          left: \"center\",\n          top: \"10\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n        },\n        legend: {\n          data: [\"奇趣事\", \"会生活\", \"爱旅行\", \"趣美味\"],\n          top: \"40\",\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: { show: true },\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: [\"line\", \"bar\"] },\n            restore: { show: true },\n            saveAsImage: { show: true },\n          },\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            data: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\"],\n          },\n        ],\n        yAxis: [\n          {\n            name: \"访问量\",\n            type: \"value\",\n          },\n        ],\n        series: [\n          {\n            name: \"奇趣事\",\n            type: \"bar\",\n            barWidth: 20,\n            areaStyle: { type: \"default\" },\n            itemStyle: {\n              color: \"#fd956a\",\n            },\n            data: [800, 708, 920, 1090, 1200],\n          },\n          {\n            name: \"会生活\",\n            type: \"bar\",\n            barWidth: 20,\n            areaStyle: { type: \"default\" },\n            itemStyle: {\n              color: \"#2bb6db\",\n            },\n            data: [400, 468, 520, 690, 800],\n          },\n          {\n            name: \"爱旅行\",\n            type: \"bar\",\n            barWidth: 20,\n            areaStyle: { type: \"default\" },\n            itemStyle: {\n              color: \"#13cfd5\",\n            },\n            data: [500, 668, 520, 790, 900],\n          },\n          {\n            name: \"趣美味\",\n            type: \"bar\",\n            barWidth: 20,\n            areaStyle: { type: \"default\" },\n            itemStyle: {\n              color: \"#00ce68\",\n            },\n            data: [600, 508, 720, 890, 1000],\n          },\n        ],\n        grid: {\n          show: true,\n          x: 50,\n          x2: 30,\n          y: 80,\n          height: 260,\n        },\n        dataZoom: [\n          // 给x轴设置滚动条\n          {\n            start: 0, // 默认为0\n            end: 100 - 1000 / 31, // 默认为100\n            type: \"slider\",\n            show: true,\n            xAxisIndex: [0],\n            handleSize: 0, // 滑动条的 左右2个滑动条的大小\n            height: 8, // 组件高度\n            left: 45, // 左边的距离\n            right: 50, // 右边的距离\n            bottom: 26, // 右边的距离\n            handleColor: \"#ddd\", // h滑动图标的颜色\n            handleStyle: {\n              borderColor: \"#cacaca\",\n              borderWidth: \"1\",\n              shadowBlur: 2,\n              background: \"#ddd\",\n              shadowColor: \"#ddd\",\n            },\n          },\n        ],\n      };\n      oColumn.setOption(oColumnopt);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.spannel_list {\n  margin-top: 20px;\n}\n\n.spannel {\n  height: 100px;\n  overflow: hidden;\n  text-align: center;\n  position: relative;\n  background-color: #fff;\n  border: 1px solid #e7e7e9;\n  margin-bottom: 20px;\n}\n\n.spannel em {\n  font-style: normal;\n  font-size: 50px;\n  line-height: 50px;\n  display: inline-block;\n  margin: 10px 0 0 20px;\n  font-family: \"Arial\";\n  color: #83a2ed;\n}\n\n.spannel span {\n  font-size: 14px;\n  display: inline-block;\n  color: #83a2ed;\n  margin-left: 10px;\n}\n\n.spannel b {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  line-height: 24px;\n  background: #e5e5e5;\n  color: #333;\n  font-size: 14px;\n  font-weight: normal;\n}\n\n.scolor01 em,\n.scolor01 span {\n  color: #6ac6e2;\n}\n\n.scolor02 em,\n.scolor02 span {\n  color: #5fd9de;\n}\n\n.scolor03 em,\n.scolor03 span {\n  color: #58d88e;\n}\n\n.gragh_pannel {\n  height: 350px;\n  border: 1px solid #e7e7e9;\n  background-color: #fff !important;\n  margin-bottom: 20px;\n}\n\n.column_pannel {\n  margin-bottom: 20px;\n  height: 400px;\n  border: 1px solid #e7e7e9;\n  background-color: #fff !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}