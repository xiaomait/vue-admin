{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapMutations } from \"vuex\";\nimport { loginAPI } from \"@/api\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      // 登录表单的数据对象\n      loginForm: {\n        username: \"\",\n        password: \"\"\n      },\n      // 登录表单的验证规则对象\n      loginRules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^[a-zA-Z0-9]{1,10}$/,\n          message: \"用户名必须是1-10的字母数字\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: \"密码必须是6-15的非空字符\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    ...mapMutations([\"updateToken\"]),\n    // 登录按钮->点击事件\n    async loginFn() {\n      this.$refs.loginRef.validate(async valid => {\n        if (!valid) return;\n        // 1. 发起登录的请求\n        const {\n          data: res\n        } = await loginAPI(this.loginForm);\n        // 2. 登录失败\n        if (res.code !== 0) return this.$message.error(res.message);\n        // 3. 登录成功\n        this.$message.success(res.message);\n        // console.log(res);\n        // 先存储再进行跳转，可以避免两次点击的bug\n        this.updateToken(res.token);\n        this.$store.dispatch(\"initUserInfo\");\n        this.$router.push(\"/\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAwCA;AACA;AACA;EACAA;EACAC;IACA;MACA;MACAC;QACAC;QACAC;MACA;MACA;MACAC;QACAF,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA,EACA;QACAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA;MAEA;IACA;EACA;EACAE;IACA;IACA;IACA;MACA;QACA;QACA;QACA;UAAAT;QAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","loginForm","username","password","loginRules","required","message","trigger","pattern","methods"],"sourceRoot":"src/views/Login","sources":["index.vue"],"sourcesContent":["<template>\n  <!-- 登录页面的整体盒子 -->\n  <div class=\"login-container\">\n    <!-- 登录的盒子 -->\n    <div class=\"login-box\">\n      <!-- 标题的盒子 -->\n      <div class=\"title-box\"></div>\n      <!-- 登录的表单区域 -->\n      <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginRef\">\n        <!-- 用户名 -->\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"请输入用户名\"\n            maxlength=\"10\"\n            minlength=\"1\"\n          ></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            maxlength=\"15\"\n            minlength=\"6\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" class=\"btn-login\" @click=\"loginFn\"\n            >登录</el-button\n          >\n          <el-link type=\"info\" @click=\"$router.push('/reg')\">去注册</el-link>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapMutations } from \"vuex\";\nimport { loginAPI } from \"@/api\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      // 登录表单的数据对象\n      loginForm: {\n        username: \"\",\n        password: \"\",\n      },\n      // 登录表单的验证规则对象\n      loginRules: {\n        username: [\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n          {\n            pattern: /^[a-zA-Z0-9]{1,10}$/,\n            message: \"用户名必须是1-10的字母数字\",\n            trigger: \"blur\",\n          },\n        ],\n        password: [\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          {\n            pattern: /^\\S{6,15}$/,\n            message: \"密码必须是6-15的非空字符\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  methods: {\n    ...mapMutations([\"updateToken\"]),\n    // 登录按钮->点击事件\n    async loginFn() {\n      this.$refs.loginRef.validate(async (valid) => {\n        if (!valid) return;\n        // 1. 发起登录的请求\n        const { data: res } = await loginAPI(this.loginForm);\n        // 2. 登录失败\n        if (res.code !== 0) return this.$message.error(res.message);\n        // 3. 登录成功\n        this.$message.success(res.message);\n        // console.log(res);\n        // 先存储再进行跳转，可以避免两次点击的bug\n        this.updateToken(res.token);\n        this.$store.dispatch(\"initUserInfo\");\n        this.$router.push(\"/\");\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.login-container {\n  background: url(\"../../assets/images/login_bg.jpg\") center;\n  background-size: cover;\n  height: 100vh;\n\n  .login-box {\n    width: 400px;\n    height: 270px;\n    background-color: #fff;\n    border-radius: 3px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    padding: 0 30px;\n    box-sizing: border-box;\n\n    .title-box {\n      height: 60px;\n      background: url(\"../../assets/images/login_title.png\") center no-repeat;\n    }\n\n    .btn-login {\n      width: 100%;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}