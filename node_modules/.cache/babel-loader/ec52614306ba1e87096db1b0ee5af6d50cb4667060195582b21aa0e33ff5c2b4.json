{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { registerAPI } from \"@/api\";\nexport default {\n  name: \"Register\",\n  data() {\n    const samePwd = (rule, value, callback) => {\n      if (value !== this.regForm.password) {\n        // 如果验证失败，则调用 回调函数时，指定一个 Error 对象。\n        callback(new Error(\"两次输入的密码不一致!\"));\n      } else {\n        // 如果验证成功，则直接调用 callback 回调函数即可。\n        callback();\n      }\n    };\n    return {\n      // 注册表单的数据对象\n      regForm: {\n        username: \"\",\n        password: \"\",\n        repassword: \"\"\n      },\n      // 注册表单的验证规则对象\n      regRules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^[a-zA-Z0-9]{1,10}$/,\n          message: \"用户名必须是1-10的大小写字母数字\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: \"密码必须是6-15的非空字符\",\n          trigger: \"blur\"\n        }],\n        repassword: [{\n          required: true,\n          message: \"请再次输入密码\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: \"密码必须是6-15的非空字符\",\n          trigger: \"blur\"\n        }, {\n          validator: samePwd,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    // 注册新用户\n    regNewUserFn() {\n      // 进行表单预验证\n      this.$refs.regRef.validate(async valid => {\n        if (!valid) return false;\n        // 尝试拿到用户输入的内容\n        // console.log(this.regForm);\n        // 1. 调用注册接口\n        const {\n          data: res\n        } = await registerAPI(this.regForm);\n        // console.log(res);\n        // 2. 注册失败，提示用户\n        if (res.code !== 0) return this.$message.error(res.message);\n        // 3. 注册成功，提示用户\n        this.$message.success(res.message);\n        // 4. 跳转到登录页面\n        this.$router.push(\"/login\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA4CA;AACA;EACAA;EACAC;IACA;MACA;QACA;QACAC;MACA;QACA;QACAA;MACA;IACA;IACA;MACA;MACAC;QACAC;QACAC;QACAC;MACA;MACA;MACAC;QACAH,WACA;UAAAI;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA,EACA;QACAL,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA,EACA;QACAJ,aACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UACAC;UACAF;UACAC;QACA,GACA;UAAAE;UAAAF;QAAA;MAEA;IACA;EACA;EACAG;IACA;IACAC;MACA;MACA;QACA;QACA;QACA;QACA;QACA;UAAAb;QAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","callback","regForm","username","password","repassword","regRules","required","message","trigger","pattern","validator","methods","regNewUserFn"],"sourceRoot":"src/views/Register","sources":["index.vue"],"sourcesContent":["<template>\n  <!-- 注册页面的整体盒子 -->\n  <div class=\"reg-container\">\n    <!-- 注册的盒子 -->\n    <div class=\"reg-box\">\n      <!-- 标题的盒子 -->\n      <div class=\"title-box\"></div>\n      <!-- 注册的表单区域 -->\n      <el-form :model=\"regForm\" :rules=\"regRules\" ref=\"regRef\">\n        <!-- 用户名 -->\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"regForm.username\"\n            placeholder=\"请输入用户名\"\n          ></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"regForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n          ></el-input>\n        </el-form-item>\n        <!-- 确认密码 -->\n        <el-form-item prop=\"repassword\">\n          <el-input\n            v-model=\"regForm.repassword\"\n            type=\"password\"\n            placeholder=\"请再次确认密码\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" class=\"btn-reg\" @click=\"regNewUserFn\"\n            >注册</el-button\n          >\n          <el-link type=\"info\" @click=\"$router.push('/login')\">去登录</el-link>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { registerAPI } from \"@/api\";\nexport default {\n  name: \"Register\",\n  data() {\n    const samePwd = (rule, value, callback) => {\n      if (value !== this.regForm.password) {\n        // 如果验证失败，则调用 回调函数时，指定一个 Error 对象。\n        callback(new Error(\"两次输入的密码不一致!\"));\n      } else {\n        // 如果验证成功，则直接调用 callback 回调函数即可。\n        callback();\n      }\n    };\n    return {\n      // 注册表单的数据对象\n      regForm: {\n        username: \"\",\n        password: \"\",\n        repassword: \"\",\n      },\n      // 注册表单的验证规则对象\n      regRules: {\n        username: [\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n          {\n            pattern: /^[a-zA-Z0-9]{1,10}$/,\n            message: \"用户名必须是1-10的大小写字母数字\",\n            trigger: \"blur\",\n          },\n        ],\n        password: [\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          {\n            pattern: /^\\S{6,15}$/,\n            message: \"密码必须是6-15的非空字符\",\n            trigger: \"blur\",\n          },\n        ],\n        repassword: [\n          { required: true, message: \"请再次输入密码\", trigger: \"blur\" },\n          {\n            pattern: /^\\S{6,15}$/,\n            message: \"密码必须是6-15的非空字符\",\n            trigger: \"blur\",\n          },\n          { validator: samePwd, trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  methods: {\n    // 注册新用户\n    regNewUserFn() {\n      // 进行表单预验证\n      this.$refs.regRef.validate(async (valid) => {\n        if (!valid) return false;\n        // 尝试拿到用户输入的内容\n        // console.log(this.regForm);\n        // 1. 调用注册接口\n        const { data: res } = await registerAPI(this.regForm);\n        // console.log(res);\n        // 2. 注册失败，提示用户\n        if (res.code !== 0) return this.$message.error(res.message);\n        // 3. 注册成功，提示用户\n        this.$message.success(res.message);\n        // 4. 跳转到登录页面\n        this.$router.push(\"/login\");\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.reg-container {\n  background: url(\"@/assets/images/login_bg.jpg\") center;\n  background-size: cover;\n  height: 100vh;\n\n  .reg-box {\n    width: 400px;\n    height: 335px;\n    background-color: #fff;\n    border-radius: 3px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    padding: 0 30px;\n    box-sizing: border-box;\n\n    .title-box {\n      height: 60px;\n      background: url(\"@/assets/images/login_title.png\") center no-repeat;\n    }\n\n    .btn-reg {\n      width: 100%;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}